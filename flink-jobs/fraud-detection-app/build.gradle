plugins {
    id 'java'
    id 'application'
    // shadow plugin to produce fat JARs
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

ext {
    javaVersion = '1.8'
//    flinkVersion = '1.15.0'
    flinkVersion = '1.14.5'
//    scalaBinaryVersion = '2.12'
    scalaBinaryVersion = '2.12'
    slf4jVersion = '1.7.32'
    log4jVersion = '2.17.1'
    flinkVersionNew = flinkVersion.toString().replace("-SNAPSHOT", "") >= "1.15"
}

// artifact properties
group = 'org.myorg.quickstart'
version = '0.1-SNAPSHOT'
if (flinkVersionNew) {
    mainClassName = 'org.myorg.quickstart.DataStreamJob'
} else {
    mainClassName = 'org.myorg.quickstart.StreamingJob'
}
description = """Flink Quickstart Job"""

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=log4j2.properties"]

// declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots"
        mavenContent {
            snapshotsOnly()
        }
    }
}

// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar

    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

// declare the dependencies for your production and test code
dependencies {
    // --------------------------------------------------------------
    // Compile-time dependencies that should NOT be part of the
    // shadow jar and are provided in the lib folder of Flink
    // --------------------------------------------------------------
    if (flinkVersionNew) {
        implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
        implementation "org.apache.flink:flink-clients:${flinkVersion}"
    } else {
        implementation "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
        implementation "org.apache.flink:flink-clients_${scalaBinaryVersion}:${flinkVersion}"
    }

    // --------------------------------------------------------------
    // Dependencies that should be part of the shadow jar, e.g.
    // connectors. These must be in the flinkShadowJar configuration!
    // --------------------------------------------------------------
//    flinkShadowJar "org.apache.flink:flink-connector-kafka:${flinkVersion}"
    flinkShadowJar group: 'org.apache.flink', name: 'flink-connector-kafka_2.12', version: '1.14.5'

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"

    flinkShadowJar group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

//    flinkShadowJar group: 'org.apache.cassandra', name: 'cassandra-all', version: '3.11.5'
//    flinkShadowJar group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '1.0.0'
    flinkShadowJar group: 'io.lettuce', name: 'lettuce-core', version: '6.2.0.RELEASE'

    flinkShadowJar group: 'org.apache.flink', name: 'flink-connector-cassandra_2.12', version: '1.12.3'

    flinkShadowJar group: 'org.scala-lang', name: 'scala-library', version: '2.10.4-RC3'

    flinkShadowJar group: 'org.apache.flink', name: 'flink-streaming-scala_2.11', version: '1.4.2'

    flinkShadowJar group: 'org.apache.flink', name: 'flink-connector-redis_2.11', version: '1.1.2'

    flinkShadowJar group: 'org.apache.flink', name: 'flink-metrics-dropwizard', version: '1.15.1'
    flinkShadowJar group: 'org.apache.flink', name: 'flink-statebackend-rocksdb', version: '1.15.1'
    flinkShadowJar group: 'org.apache.flink', name: 'flink-core', version: '1.15.1'

    flinkShadowJar group: 'ai.djl', name: 'api', version: '0.19.0'
    flinkShadowJar group: 'ai.djl.pytorch', name: 'pytorch-model-zoo', version: '0.19.0'
    flinkShadowJar group: 'ai.djl', name: 'model-zoo', version: '0.19.0'
    flinkShadowJar group: 'ai.djl.pytorch', name: 'pytorch-engine', version: '0.19.0'
//    runtimeOnly group: 'ai.djl.pytorch', name: 'pytorch-native-auto', version: '1.9.1'

    flinkShadowJar group: 'org.tensorflow', name: 'libtensorflow', version: '1.15.0'
    flinkShadowJar group: 'org.tensorflow', name: 'libtensorflow_jni', version: '1.15.0'
    flinkShadowJar group: 'org.tensorflow', name: 'tensorflow-core-platform', version: '0.4.2'

    flinkShadowJar group: 'com.microsoft.onnxruntime', name: 'onnxruntime', version: '1.10.0'

    // Add test dependencies here.
    // testCompile "junit:junit:4.12"
}

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar

    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar

    javadoc.classpath += configurations.flinkShadowJar
}

run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
}

